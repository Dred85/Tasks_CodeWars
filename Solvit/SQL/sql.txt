1)расчет выручки
Есть две таблицы:
таблица продаж (sales), в которой содержится информация о дате продажи, магазина, артикуле, который продали и количество проданных штук данного артикула.
вторая таблица (prices) - справочник цен, в котором есть информация по ценам всех артикулов.
Напишите запрос, который посчитает сумму продаж по 100-му магазину за 1 января 2024 года.

Поля в результирующей таблице: total_revenue.

select sum(s.quantity*p.price) as total_revenue from sales s
join prices p on s.art = p.art
where shop = 100 AND s.datetime >= '2024-01-01' AND s.datetime < '2024-01-02';

2)Преподаватели выпускных классов
Выведите идентификаторы преподавателей, у которых есть хотя бы одно занятие в каждом одиннадцатом классе.
Поля в результирующей таблице: teacher.

SELECT s.teacher
FROM schedule s
JOIN class c ON c.id = s.class
WHERE c.name LIKE '11%'
GROUP BY s.teacher
HAVING COUNT(DISTINCT c.name) = (
    SELECT COUNT(DISTINCT name)
    FROM class
    WHERE name LIKE '11%'
);

3) Страна с наибольшим количеством языков
Найдите страну, в которой используется наибольшее количество различных языков, и выведите её название.
Поля в результирующей таблице: name.

select c.name from countries c
join country_languages cl on cl.country_code = c.code
GROUP BY c.name
order by count(distinct cl.language) desc
limit 1

4)Дана таблица clickstream со следующими полями:
sid_long — идентификатор устройства;
user_id — идентификатор пользователя;
action — действие.
Напишите SQL-запрос, который вернёт все уникальные пары (sid_long, user_id), удовлетворяющие условиям:
исключить все sid_long, у которых встречаются две и более различных user_id.
исключить все user_id, у которых в таблице обнаруживается более 7 уникальных sid_long.
Отсортируйте результат в произвольном порядке.
Поля в результирующей таблице: sid_long, user_id.

SELECT DISTINCT c.sid_long, c.user_id
FROM clickstream c
-- оставляем только sid_long, привязанные к одному user_id
WHERE c.sid_long IN (
    SELECT sid_long
    FROM clickstream
    GROUP BY sid_long
    HAVING COUNT(DISTINCT user_id) = 1
)
-- оставляем только user_id, которые встречаются максимум с 7 различными sid_long
AND c.user_id IN (
    SELECT user_id
    FROM clickstream
    GROUP BY user_id
    HAVING COUNT(DISTINCT sid_long) <= 7
);
5)Список стран по населению
Напишите SQL запрос, который:
Определяет для каждой страны суммарное население всех её городов
Сортирует страны по убыванию этого показателя (total_population)
Добавляет столбец с разницей в населении между текущей и следующей страной (для последней 0)
Поля в результирующей таблице: country_name, total_population, population_diff.
SELECT
    country_name,
    total_population,
    COALESCE(total_population - LEAD(total_population) OVER (ORDER BY total_population DESC), 0) AS population_diff
FROM (
    SELECT
        c.name AS country_name,
        SUM(ct.population) AS total_population
    FROM
        countries c
    JOIN
        cities ct ON c.code = ct.country_code
    GROUP BY
        c.name
) AS sub
ORDER BY
    total_population DESC;

6) Удалить ботов
Вывести id тех пользователей, которые считаются ботами. Предполагается, что если кто-то зарегистрировался с email, который уже есть в базе, то это бот.
Столбцы в ответе: id.
SELECT id
FROM users u
WHERE email IN (
    SELECT email
    FROM users
    GROUP BY email
    HAVING COUNT(*) > 1
)
AND id NOT IN (
    SELECT MIN(id)
    FROM users
    GROUP BY email
);